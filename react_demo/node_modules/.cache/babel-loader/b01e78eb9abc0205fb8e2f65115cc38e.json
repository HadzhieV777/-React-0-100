{"ast":null,"code":"var _jsxFileName = \"/home/radoslav/exercise/react_demo/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\"; // import reportWebVitals from './reportWebVitals';\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n// JSX returns plain JS objects\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst page = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"My reactive site!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"It's great\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Stuff 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Stuff 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Stuff 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Stuff 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\nReactDOM.render(page, document.getElementById('root')); // document.getElementById(\"root\").append(JSON.stringify(page));\n\nconsole.log(page); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","page","render","document","getElementById","console","log"],"sources":["/home/radoslav/exercise/react_demo/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// JSX returns plain JS objects\nconst page = (\n  <div>\n    <h1>My reactive site!</h1>\n    <h3>It's great</h3>\n    <ol>\n      <li>Stuff 1</li>\n      <li>Stuff 2</li>\n      <li>Stuff 3</li>\n      <li>Stuff 4</li>\n    </ol>\n  </div>\n);\n\nReactDOM.render(page, document.getElementById('root'));\n// document.getElementById(\"root\").append(JSON.stringify(page));\nconsole.log(page);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,IAAI,gBACR;EAAA,wBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,eAEE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF,eAGE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QAHF;AAAA;EAAA;EAAA;EAAA;AAAA,QADF;;AAaAF,QAAQ,CAACG,MAAT,CAAgBD,IAAhB,EAAsBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAtB,E,CACA;;AACAC,OAAO,CAACC,GAAR,CAAYL,IAAZ,E,CAGA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}